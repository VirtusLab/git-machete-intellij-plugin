version: 2.1
jobs:
  build:
    docker:
      - image: 'gitmachete/intellij-plugin-ci:1.0.0'
    working_directory: ~/git-machete-intellij-plugin
    steps:
      - checkout
      - run:
          name: Start Gradle daemon
          command: ./gradlew
      - run:
          name: Compile production code
          # Given the RAM limits on CI (4GB), max-workers=2 is necessary to prevent OOMs.
          command: ./gradlew --max-workers=2 compileJava

      - run:
          name: Build plugin artifact
          command: ./gradlew buildPlugin
      - store_artifacts:
          path: build/distributions/
          destination: .

      - persist_to_workspace:
          root: .
          paths: ['*']


  release:
    docker:
      - image: gitmachete/intellij-plugin-ci
    working_directory: ~/git-machete-intellij-plugin
    steps:
      # No checkout, just attaching the workspace from the build job.
      - attach_workspace:
          at: .
      - run:
          # It was hard to make `git push`/`hub pull-request` to work with SSH repo access in CI.
          name: Reconfigure origin remote to https
          command: git remote set-url origin https://${GITHUB_TOKEN_BOT}@github.com/VirtusLab/git-machete-intellij-plugin.git
      - deploy:
          name: Push git tag
          command: |
            source scripts/utils.sh
            tag=test_v$(extract_version_from_current_wd)
            git tag "$tag"
            git push origin "$tag"
      - deploy:
          name: Create GitHub release
          command: |
            source scripts/utils.sh
            tag=test_v$(extract_version_from_current_wd)
            GITHUB_TOKEN="${GITHUB_TOKEN_BOT}" hub release create \
              --attach build/distributions/git-machete-intellij-plugin-*.zip \
              --message "$tag"$'\n\n'"$(<CHANGE-NOTES.html)" \
              $tag
      - deploy:
          name: Open backport PR to develop
          command: |
            source scripts/utils.sh
            version=$(extract_version_from_current_wd)
            branch=backport/test_v$version
            git checkout -b "$branch"
            git push origin "$branch"
            GITHUB_TOKEN="${GITHUB_TOKEN_BOT}" hub pull-request \
              --no-edit \
              --base=develop \
              --message="[DO NOT MERGE] Backport release of test_v$version to develop" \
              --labels=backport


workflows:
  version: 2
  workflow:
    jobs:
      - build
      - hold: # A job that will require manual approval in the CircleCI web application.
          type: approval
          requires: [build]
      - release:
          requires: [hold]
