probe {
  paths.screenshots = ${?IDEPROBE_SCREENSHOTS_DIR}
  driver {
    vmOptions = [
      # TODO (JetBrains/intellij-ui-test-robot#191): turn off DEBUG logs from Ktor & Netty completely

      # To supress `java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe
      #   (in module java.base) because module java.base does not export jdk.internal.misc`
      "--add-opens", "java.base/jdk.internal.misc=ALL-UNNAMED",
      # To suppress `java.lang.UnsatisfiedLinkError: no netty_transport_native_epoll in java.library.path`,
      # see source code for io.netty.channel.epoll.Epoll (as it's undocumented otherwise).
      "-Dio.netty.transport.noNative=true",
      # To suppress `java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled`
      # from io.netty.util.internal.ReflectionUtil#trySetAccessible
      "-Dio.netty.tryReflectionSetAccessible=true",

      "-Xmx1G"
    ]
    check.errors = true
  }

  resolvers {
    intellij.repositories = [
      # Let's first try using the IntelliJs downloaded by intellij-plugin-verifier, if present
      # They're easier to use than Gradle-downloaded IntelliJs since their paths don't contain version-dependent hashes
      "file:///"${HOME}"/.pluginVerifier/ides/IC-[revision]/",

      official
    ]
    jbr.repositories = [
      # As of ide-probe v0.34.0, this is the `official`/default resolver (see `org.virtuslab.ideprobe.dependencies.JbrResolvers.official`).
      # Let's state the URL explicitly here anyway.
      # For further details on DCEVM (Dynamic Code Evolution VM), see https://blog.jetbrains.com/idea/2013/07/get-true-hot-swap-in-java-with-dcevm-and-intellij-idea/
      "https://cache-redirector.jetbrains.com/intellij-jbr/jbr_dcevm-[major]-[platform]-x64-b[minor].tar.gz",
      # TODO (VirtusLab/ide-probe#213): as of Intellij 2022.2, jbr_dcevm seems no longer available for some reason.
      # Let's use jbr_jcef instead.
      # For further details on JCEF (Java Chromium Embedded Framework), see https://plugins.jetbrains.com/docs/intellij/jcef.html
      "https://cache-redirector.jetbrains.com/intellij-jbr/jbr_jcef-[major]-[platform]-x64-b[minor].tar.gz"
    ]
  }
}
