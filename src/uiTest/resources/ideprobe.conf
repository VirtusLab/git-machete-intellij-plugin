probe {
  paths {
    base = ${?IDEPROBE_PATHS_BASE}
    screenshots = ${?IDEPROBE_PATHS_SCREENSHOTS}
  }

  driver {
    vmOptions = ["-Xmx1G"]
    check {
      errors {
        enabled = true
        excludeMessages = ["com.intellij.diagnostic.PluginException: Cannot create class com.intellij.uast.UastMetaLanguage"]
      }
    }
  }

  resolvers {
    intellij.repositories = [
      # Let's first try using the IntelliJs downloaded by intellij-plugin-verifier, if present
      # They're easier to use than Gradle-downloaded IntelliJs since their paths don't contain version-dependent hashes
      "file:///"${HOME}"/.pluginVerifier/ides/IC-[revision]/",

      official
    ]
    jbr.repositories = [
      # As of ide-probe v0.35.0, this is the `official`/default resolver (see `org.virtuslab.ideprobe.dependencies.JbrResolvers.official`).
      # Let's state the URL explicitly here anyway.
      # For further details on DCEVM (Dynamic Code Evolution VM), see https://blog.jetbrains.com/idea/2013/07/get-true-hot-swap-in-java-with-dcevm-and-intellij-idea/
      "https://cache-redirector.jetbrains.com/intellij-jbr/jbr_dcevm-[major]-[platform]-x64-b[minor].tar.gz",

      # TODO (VirtusLab/ide-probe#213): as of Intellij 2022.2, which uses Java 17, jbr_dcevm is no longer available.
      # jbr, jbr_jcef and jbr_fd seem to be the only accessible ones.
      # See https://plugins.jetbrains.com/docs/intellij/ide-development-instance.html#jetbrains-runtime-variants
      "https://cache-redirector.jetbrains.com/intellij-jbr/jbr-[major]-[platform]-x64-b[minor].tar.gz"
    ]
  }
}
