probe {
  paths {
    base = ${?IDEPROBE_PATHS_BASE}
    screenshots = ${?IDEPROBE_PATHS_SCREENSHOTS}
    logExport = ${?IDEPROBE_PATHS_LOG_EXPORT}
  }

  driver {
    vmOptions = ["-Xmx1G"]
    check {
      errors {
        enabled = true
        excludeMessages = [
          "com.intellij.diagnostic.PluginException: Cannot create class com.intellij.uast.UastMetaLanguage",
          """java.lang.NullPointerException
          at com.intellij.util.messages.impl.MessageBusConnectionImpl.deliverImmediately(MessageBusConnectionImpl.java:61)
          at com.intellij.psi.impl.file.impl.FileManagerImpl.dispatchPendingEvents(FileManagerImpl.java:311)
          at com.intellij.psi.impl.file.impl.FileManagerImpl.getCachedPsiFile(FileManagerImpl.java:378)""",
          """java.lang.NullPointerException
          at com.intellij.uast.UastMetaLanguage.matchesLanguage(UastMetaLanguage.java:38)
          at com.intellij.codeInsight.daemon.impl.JavaColorProvider.getColorFrom(JavaColorProvider.java:39)
          at com.intellij.ui.ColorLineMarkerProvider.lambda$getLineMarkerInfo$0(ColorLineMarkerProvider.java:39)
          at com.intellij.openapi.extensions.impl.ExtensionProcessingHelper.computeSafeIfAny(ExtensionProcessingHelper.java:55)"""
        ]
      }
    }
    xvfb {
      # Let's increase screen size from the default (Full HD) to reduce the probability of
      # `java.awt.IllegalComponentStateException: component must be showing on the screen to determine its location`
      screen {
        width = 3840
        height = 2160
      }
    }
  }

  intellij {
    plugins = [
      { uri = ${IDEPROBE_INTELLIJ_PLUGIN_URI} }
    ]

    version {
      # We're cheating here a bit since IDEPROBE_INTELLIJ_VERSION_BUILD might be either a build number or a release number,
      # while we're always treating it as a build number.
      # Still, as of ide-probe 0.42.0, even when release number like `2020.3` is passed as `version.build`, UI tests work just fine.
      build = ${IDEPROBE_INTELLIJ_VERSION_BUILD}
      release = null
    }
  }

  resolvers {
    intellij.repositories = [
      # Let's first try using the IntelliJs downloaded by intellij-plugin-verifier or Gradle, if present.
      "file:///"${HOME}"/.cache/pluginVerifier/ides/IC-[revision]/",
      "file:///"${HOME}"/.gradle/caches/modules-2/files-2.1/com.jetbrains.intellij.idea/ideaIC/[revision]/*/ideaIC-[revision]/",
      official
    ]
  }
}
