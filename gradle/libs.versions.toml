# The [plugins] section has been removed even though plugins are still used, because we decided to use legacy plugin application
# throughout the whole project. This way of applying plugins was needed for the build-related code in buildSrc/src/main/,
# see https://docs.gradle.org/current/samples/sample_convention_plugins.html#things_to_note
[versions]
checker = "3.30.0"
junitJupiter = "5.9.2"

[libraries]
# Libraries
apacheCommonsText = "org.apache.commons:commons-text:1.10.0"
archunit = "com.tngtech.archunit:archunit:1.0.1"
betterStrings = "com.antkorwin:better-strings:0.5"
checker = { module = "org.checkerframework:checker", version.ref = "checker" }
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checker" }
commonsIO = "commons-io:commons-io:2.11.0"
ideProbe-robotDriver = "org.virtuslab.ideprobe:robot-driver_2.13:0.51.0"
jcabi-aspects = "com.jcabi:jcabi-aspects:0.24.1"
jetbrains-annotations = "org.jetbrains:annotations:24.0.0"
jgit = "org.eclipse.jgit:org.eclipse.jgit:6.4.0.202211300538-r"
jsoup = "org.jsoup:jsoup:1.15.3"
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiter" }
junit-platform-launcher = "org.junit.platform:junit-platform-launcher:1.9.2"
lombok = "org.projectlombok:lombok:1.18.26"
mockito = "org.mockito:mockito-junit-jupiter:5.1.1"
slf4j-lambda = "kr.pe.kwonnam.slf4j-lambda:slf4j-lambda-core:0.1"
slf4j-mock = "org.simplify4u:slf4j-mock:2.3.0"
# @pin because slf4j-simple 2.0.0 isn't compatible with slf4j-api v1.x.y, which is still pulled in by our dependencies.
#      See https://www.slf4j.org/faq.html#changesInVersion200.
#      We could theoretically also override slf4j-api to v2.0.0 in tests that rely on slf4j-simple...
#      but that's not worth it yet, esp. given that IntelliJ still runs on slf4j-api v1.x.y as of 2022.2.
#      Also, see https://github.com/littlerobots/version-catalog-update-plugin/issues/79 for pinning just major version
#      (1.*.*, rather than a specific version like 1.7.36).
slf4j-simple = "org.slf4j:slf4j-simple:1.7.36"
vavr = "io.vavr:vavr:0.10.4"
# Plugins
pluginPackages-aspectj-postCompileWeaving = "io.freefair.gradle:aspectj-plugin:6.6.1"
pluginPackages-checkerFramework = "org.checkerframework:checkerframework-gradle-plugin:0.6.23"
pluginPackages-grgit = "org.ajoberstar.grgit:grgit-gradle:5.0.0"
pluginPackages-jetbrains-changelog = "org.jetbrains.intellij.plugins:gradle-changelog-plugin:2.0.0"
# @pin TODO (#859): gradle-grammarkit-plugin 2022.3 requires `targetCompatibility` to be Java 17, not Java 11.
#       As long as we support IntelliJ 2022.1, we need to compile to Java 11 classfiles,
#       hence we need to stick to an older gradle-grammarkit-plugin.
pluginPackages-jetbrains-grammarkit = "org.jetbrains.intellij.plugins:gradle-grammarkit-plugin:2021.2.2"
pluginPackages-jetbrains-intellij = "org.jetbrains.intellij.plugins:gradle-intellij-plugin:1.12.0"
# @pin because as per https://plugins.jetbrains.com/docs/intellij/using-kotlin.html#kotlin-standard-library:
#      "If a plugin supports multiple platform versions, it must (...) target the lowest bundled stdlib version"
#      which is different in our case (as this is the Kotlin version bundled into IntelliJ 2022.1).
pluginPackages-jetbrains-kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.20"
pluginPackages-spotless = "com.diffplug.spotless:spotless-plugin-gradle:6.14.1"
pluginPackages-taskTree = "com.dorongold.plugins:task-tree:2.1.1"
pluginPackages-versionCatalogUpdate = "nl.littlerobots.version-catalog-update:nl.littlerobots.version-catalog-update.gradle.plugin:0.5.3"
pluginPackages-versionsFilter = "se.ascp.gradle:gradle-versions-filter:0.1.16"
